import {
  type Item,
  ItemId,
  EquipSlot,
  ItemAction,
  ItemRarity,
  ItemProperty,
  ItemType,
  ItemContainerId,
  type ItemContainer,
} from "../types/item.types";

// What if item would have craftable key which would include object with abilityRequirements, xp etc.

export const itemContainers: Record<ItemContainerId, ItemContainer> = {
  [ItemContainerId.PlayerInventory]: {
    id: ItemContainerId.PlayerInventory,
    maxSize: 28,
    slots: new Array(28).fill(null),
  },
  [ItemContainerId.PlayerGear]: {
    id: ItemContainerId.PlayerGear,
    maxSize: 11,
    slots: new Array(11).fill(null),
  },
};

export const items: Record<ItemId, Item> = {
  [ItemId.RawPanfish]: {
    name: "Raw Panfish",
    type: ItemType.Resource,
    properties: [],
    weight: 1,
    maxStackSize: 10,
    value: 1,
    rarity: ItemRarity.Normal,
    img: "/items/panfish.png",
    xp: 10,
    actions: [ItemAction.Drop],
  },
  [ItemId.RawBluegill]: {
    name: "Raw Bluegill",
    type: ItemType.Resource,
    properties: [],
    weight: 1,
    maxStackSize: 10,
    value: 1,
    rarity: ItemRarity.Normal,
    img: "/items/bluegill.png",
    xp: 20,
    actions: [ItemAction.Drop],
  },
  [ItemId.WoodenSword]: {
    name: "Wooden Sword",
    type: ItemType.Equipment,
    properties: [ItemProperty.Weapon, ItemProperty.OneHanded],
    weight: 1,
    maxStackSize: 1,
    value: 10,
    rarity: ItemRarity.Normal,
    img: "/items/sword_01.png",
    actions: [ItemAction.Equip, ItemAction.Unequip, ItemAction.Drop],
    equip: {
      equipSlot: EquipSlot.MainHand,
      resistances: {
        blunt: 0,
        pierce: 0,
        slash: 0,
      },
    },
  },
  [ItemId.IronSword]: {
    name: "Iron Sword",
    type: ItemType.Equipment,
    properties: [
      ItemProperty.OneHanded,
      ItemProperty.Weapon,
      ItemProperty.Blade,
    ],
    weight: 1,
    maxStackSize: 1,
    value: 10,
    rarity: ItemRarity.Normal,
    img: "/items/sword_02.png",
    actions: [ItemAction.Equip, ItemAction.Unequip, ItemAction.Drop],
    equip: {
      equipSlot: EquipSlot.MainHand,
      resistances: {
        blunt: 0,
        pierce: 0,
        slash: 0,
      },
    },
  },
  [ItemId.LeatherBoots]: {
    name: "Leather Boots",
    type: ItemType.Equipment,
    properties: [],
    weight: 1,
    maxStackSize: 1,
    value: 10,
    rarity: ItemRarity.Normal,
    img: "/items/boots_01.png",
    actions: [ItemAction.Equip, ItemAction.Unequip, ItemAction.Drop],
    equip: {
      equipSlot: EquipSlot.Feet,
      resistances: {
        blunt: 2,
        pierce: 4,
        slash: 6,
      },
    },
  },
  [ItemId.OakLog]: {
    name: "Oak Log",
    type: ItemType.Resource,
    properties: [],
    weight: 1,
    maxStackSize: 10,
    value: 1,
    rarity: ItemRarity.Normal,
    img: "/items/oak_log.png",
    xp: 10,
    actions: [ItemAction.Drop],
  },
  [ItemId.CookedBluegill]: {
    name: "Cooked Bluegill",
    type: ItemType.Food,
    properties: [],
    weight: 1,
    maxStackSize: 10,
    value: 1,
    rarity: ItemRarity.Normal,
    img: "/items/cooked_bluegill.png",
    xp: 10,
    actions: [ItemAction.Drop],
  },
  [ItemId.CookedPanfish]: {
    name: "Cooked Panfish",
    type: ItemType.Food,
    properties: [],
    weight: 1,
    maxStackSize: 10,
    value: 1,
    rarity: ItemRarity.Normal,
    img: "/items/cooked_panfish.png",
    xp: 10,
    actions: [ItemAction.Drop],
  },
  [ItemId.Gold]: {
    name: "Gold",
    type: ItemType.Currency,
    properties: [],
    weight: 1,
    maxStackSize: 1000000000,
    value: 1,
    rarity: ItemRarity.Normal,
    img: "/items/coin_01d.png",
    actions: [ItemAction.Drop],
  },
};
